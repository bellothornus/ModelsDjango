# Generated by Django 3.0.6 on 2020-05-21 11:38

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ambito',
            fields=[
                ('id_am', models.AutoField(db_column='id_Ambito', primary_key=True, serialize=False)),
                ('str_am_nombre', models.CharField(db_column='Nombre', max_length=256)),
                ('str_am_descripcion', models.CharField(blank=True, db_column='Descripcion', max_length=256, null=True)),
                ('bool_am_eliminado', models.BooleanField(db_column='eliminado', default=False)),
            ],
            options={
                'db_table': 'ambitos',
            },
        ),
        migrations.CreateModel(
            name='Estructura',
            fields=[
                ('id_est', models.AutoField(db_column='id_Estructura', primary_key=True, serialize=False)),
                ('str_est_nombre', models.CharField(db_column='Nombre', max_length=256)),
                ('bool_est_eliminado', models.BooleanField(db_column='eliminado', default=False)),
            ],
            options={
                'db_table': 'estructuras',
            },
        ),
        migrations.CreateModel(
            name='NivelAreaGeografica',
            fields=[
                ('id_nag', models.AutoField(db_column='id_Nivel_Area', primary_key=True, serialize=False)),
                ('num_nag_nivel', models.IntegerField(db_column='Nivel', default=9999, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('str_nag_nombre', models.CharField(db_column='Nombre', max_length=256)),
                ('str_nag_descripcion', models.CharField(blank=True, db_column='Descripcion', max_length=256, null=True)),
                ('bool_nag_eliminado', models.BooleanField(db_column='eliminado', default=False)),
            ],
            options={
                'db_table': 'nivel_areas_geograficas',
            },
        ),
        migrations.CreateModel(
            name='Riesgo',
            fields=[
                ('id_rg', models.AutoField(db_column='id_Riesgo', primary_key=True, serialize=False)),
                ('str_rg_nombre', models.CharField(db_column='Nombre', max_length=256)),
                ('bool_rg_eliminado', models.BooleanField(db_column='eliminado', default=False)),
            ],
            options={
                'db_table': 'riesgos',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id_sc', models.AutoField(db_column='id_Sector', primary_key=True, serialize=False)),
                ('str_sc_nombre', models.CharField(db_column='Nombre', max_length=256)),
                ('str_sc_descripcion', models.CharField(blank=True, db_column='Descripcion', max_length=256, null=True)),
                ('bool_sc_eliminado', models.BooleanField(db_column='eliminado', default=False)),
            ],
            options={
                'db_table': 'sectores',
            },
        ),
        migrations.CreateModel(
            name='TipoInterviniente',
            fields=[
                ('id_ti', models.AutoField(db_column='id_Tipo_Interviniente', primary_key=True, serialize=False)),
                ('str_ti_nombre', models.CharField(db_column='Nombre', max_length=256)),
                ('bool_ti_eliminado', models.BooleanField(db_column='eliminado', default=False)),
            ],
            options={
                'db_table': 'tipo_intervinientes',
            },
        ),
        migrations.CreateModel(
            name='TipoObjetivo',
            fields=[
                ('id_to', models.AutoField(db_column='id_Tipo_Objetivo', primary_key=True, serialize=False)),
                ('str_to_nombre', models.CharField(db_column='Nombre', max_length=256)),
                ('bool_to_eliminado', models.BooleanField(db_column='eliminado', default=False)),
            ],
            options={
                'db_table': 'tipo_objetivos',
            },
        ),
    ]
